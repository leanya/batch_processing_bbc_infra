name: 'Terraform'

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    outputs:
      instance_public_dns: ${{steps.set_dns.outputs.instance_public_dns}}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ap-southeast-1

    steps:
    - name: Checkout repo 
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false
        terraform_version: 1.10.0

    - name: Debug Working Directory
      run: |
        echo "Current Directory:"
        pwd
        echo "Contents:"
        ls -la

    - name: Terraform Init
      id: terraform_init
      run: terraform init
      working-directory: ./aws_cloud
    
    - name: Terraform Plan
      id: terraform_plan
      run: terraform plan
      working-directory: ./aws_cloud
    
    - name: Terraform Apply
      id: terraform_apply
      run: terraform apply -auto-approve
      working-directory: ./aws_cloud

    - name: Set output
      id: set_dns
      run: |-
        echo "instance_public_dns=$(terraform output -raw instance_public_ip)" >> $GITHUB_OUTPUT
      working-directory: ./aws_cloud

  deployment:
    needs: [terraform]
    name: 'Deployment'
    runs-on: ubuntu-latest
    env:
      DOCKER_USER: ${{secrets.DOCKER_USER}}
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PRIVATE }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Log into Docker Hub 
      env: 
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Build images
      run: docker compose -f docker-compose.yml build
      working-directory: ./deployment_batch 

    - name: Push images to Docker Hub 
      run: docker compose -f docker-compose.yml push 
      working-directory: ./deployment_batch 
    
    - name: Copy files to EC2 via SSH
      uses: appleboy/scp-action@v1
      with:
        host: ${{ needs.terraform.outputs.instance_public_dns }}
        username: ec2-user
        key: ${{ env.PRIVATE_SSH_KEY }}
        source: "./deployment_batch/docker-compose.yml,./deployment_batch/monitoring/prometheus.yml,./deployment_batch/monitoring/queries.yml"
        target: "."

    - name: deploy images to EC2
      uses: appleboy/ssh-action@master 
      with:
        host: ${{ needs.terraform.outputs.instance_public_dns }}
        username: ec2-user
        key: ${{ env.PRIVATE_SSH_KEY }}
        script: |
          cd deployment_batch
          docker-compose stop
          docker-compose rm -f
          docker-compose pull
          docker-compose up -d
          docker image prune -f